
name: Deploy PWA to GitHub Pages

on:
  push:
    branches:
      - main # Ou a branch que voc√™ usa como principal

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Necess√°rio para fazer push para a branch gh-pages

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Setup Node.js üèóÔ∏è
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use uma vers√£o LTS do Node.js
          cache: 'npm'

      - name: Install Dependencies üë®‚Äçüíª
        run: npm ci

      # Se o seu site for publicado em um subdiret√≥rio (ex: username.github.io/repo-name),
      # voc√™ precisar√° definir a vari√°vel de ambiente BASE_PATH aqui e
      # configurar basePath e assetPrefix no seu next.config.js.
      # Exemplo:
      # env:
      #   BASE_PATH: /${{ github.event.repository.name }} # Ou o nome do seu subdiret√≥rio
      - name: Build PWA üõ†Ô∏è
        run: npm run build
        env:
          # Adicione aqui quaisquer outras vari√°veis de ambiente necess√°rias para o build
          # Ex: TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          # Ex: GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          # Voc√™ precisar√° configurar esses secrets nas Configura√ß√µes > Secrets and variables > Actions do seu reposit√≥rio GitHub.
          # Para vari√°veis p√∫blicas, voc√™ pode defini-las diretamente aqui ou usar NEXT_PUBLIC_ prefixadas.
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ vars.NEXT_PUBLIC_FIREBASE_API_KEY || secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ vars.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN || secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID || secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ vars.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET || secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ vars.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ vars.NEXT_PUBLIC_FIREBASE_APP_ID || secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ vars.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID || secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
          NEXT_PUBLIC_FIREBASE_VAPID_KEY: ${{ vars.NEXT_PUBLIC_FIREBASE_VAPID_KEY || secrets.NEXT_PUBLIC_FIREBASE_VAPID_KEY }}
          # As chaves TMDB_API_KEY e GEMINI_API_KEY s√£o usadas no backend (Genkit flows) e
          # n√£o devem ser prefixadas com NEXT_PUBLIC_. Elas devem ser configuradas como secrets.
          # Se voc√™ n√£o for usar os fluxos Genkit diretamente no processo de build est√°tico
          # (o que geralmente n√£o acontece para gerar o frontend), voc√™ pode n√£o precisar delas aqui.
          # Contudo, se alguma p√°gina pr√©-renderizada durante o build precisar delas, configure os secrets.


      - name: Deploy to GitHub Pages üöÄ
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out # A pasta de sa√≠da do Next.js para 'output: export'
          # user_name: 'github-actions[bot]' # Opcional
          # user_email: 'github-actions[bot]@users.noreply.github.com' # Opcional
          # Se voc√™ estiver usando um dom√≠nio personalizado para o GitHub Pages, adicione um arquivo CNAME
          # √† raiz do seu projeto (na branch 'main') ou configure-o nas configura√ß√µes do reposit√≥rio.
          # cname: your.custom.domain.com
          # publish_branch: gh-pages # Branch para onde ser√° feito o deploy (padr√£o: gh-pages)
          # force_orphan: true # Cria uma branch 'gh-pages' limpa a cada deploy (recomendado)
